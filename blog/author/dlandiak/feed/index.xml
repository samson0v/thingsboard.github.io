<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Dima Landiak - Thingsboard's blog</title>
	<atom:link href="/blog/author/dlandiak/feed/" rel="self" type="application/rss+xml" />
	<link>/blog/</link>
	<description></description>
	<lastBuildDate>Thu, 20 Jun 2024 13:52:54 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.4</generator>
	<item>
		<title>TBMQ 1.3.0 release: WebSocket client, advanced MQTT 5 features, and more</title>
		<link>/blog/tbmq-1-3-0-release-websocket-client-advanced-mqtt-5-features-and-more/?utm_source=rss#038;utm_medium=rss&#038;utm_campaign=tbmq-1-3-0-release-websocket-client-advanced-mqtt-5-features-and-more</link>
		
		<dc:creator><![CDATA[Dima Landiak]]></dc:creator>
		<pubDate>Tue, 02 Apr 2024 08:48:23 +0000</pubDate>
				<category><![CDATA[Updates]]></category>
		<guid isPermaLink="false">https://wp.thingsboard.io/?p=3965</guid>

					<description><![CDATA[<p>We&#8217;re delighted to introduce TBMQ version 1.3.0! This update improves MQTT over WebSocket functionality by introducing a new&#8230;</p>
<p>The post <a href="/blog/tbmq-1-3-0-release-websocket-client-advanced-mqtt-5-features-and-more/">TBMQ 1.3.0 release: WebSocket client, advanced MQTT 5 features, and more</a> first appeared on <a href="/blog/">Thingsboard's blog</a>.</p>]]></description>
										<content:encoded><![CDATA[<p style="font-size:16px">We&#8217;re delighted to introduce TBMQ version 1.3.0! This update improves MQTT over WebSocket functionality by introducing a new WebSocket client. It also broadens the scope of supported MQTT 5 features. Here&#8217;s an overview of the features and updates included in this release.</p>



<h1 class="wp-block-heading">WebSocket Client</h1>



<figure class="wp-block-gallery has-nested-images columns-default is-cropped wp-block-gallery-6 is-layout-flex wp-block-gallery-is-layout-flex">
<figure class="wp-block-image size-large"><img fetchpriority="high" decoding="async" width="2409" height="1677" data-id="4534" src="/blog/wp-content/uploads/2024/05/1921-3.webp" alt="" class="wp-image-4534" srcset="/blog/wp-content/uploads/2024/05/1921-3.webp 2409w, /blog/wp-content/uploads/2024/05/1921-3-300x209.webp 300w, /blog/wp-content/uploads/2024/05/1921-3-1024x713.webp 1024w, /blog/wp-content/uploads/2024/05/1921-3-768x535.webp 768w, /blog/wp-content/uploads/2024/05/1921-3-1536x1069.webp 1536w, /blog/wp-content/uploads/2024/05/1921-3-2048x1426.webp 2048w, /blog/wp-content/uploads/2024/05/1921-3-512x356.webp 512w, /blog/wp-content/uploads/2024/05/1921-3-920x640.webp 920w, /blog/wp-content/uploads/2024/05/1921-3-1600x1114.webp 1600w, /blog/wp-content/uploads/2024/05/1921-3-1920x1337.webp 1920w" sizes="(max-width: 2409px) 100vw, 2409px" /></figure>
</figure>



<p style="font-size:16px">We have added the new WebSocket client &#8211; a browser-accessible tool that greatly simplifies the debugging and testing of MQTT clients across various scenarios. Utilizing the <a href="https://thingsboard.io/docs/mqtt-broker/user-guide/mqtt-over-ws/">MQTT over WebSocket </a>feature, this tool offers a user-friendly interface for a range of functionalities. Key features include:</p>



<ul>
<li style="font-size:16px"><strong>Multiple connections</strong>: Effortlessly manage several MQTT client connections at once.</li>



<li style="font-size:16px"><strong>Advanced connection settings and authentication</strong>: Customize your connection parameters with a range of sophisticated options, catering to diverse requirements. Select from multiple authentication options to ensure a user-friendly and secure connection experience.</li>



<li style="font-size:16px"><strong>Subscription management</strong>: Quickly add or change what topics youâ€™re subscribed to allowing you to specify advanced MQTT options.</li>



<li style="font-size:16px"><strong>Messages and logging</strong>: Keep track of message flows and connection status logs for effective debugging and analysis.</li>



<li style="font-size:16px"><strong>Message publishing</strong>: Conveniently publish messages with the ability to customize various MQTT-related settings for tailored communication.</li>
</ul>



<h4 class="wp-block-heading">MQTT 5: Flow Control</h4>



<figure class="wp-block-gallery has-nested-images columns-default is-cropped wp-block-gallery-7 is-layout-flex wp-block-gallery-is-layout-flex">
<figure class="wp-block-image size-large"><img decoding="async" width="2409" height="858" data-id="4487" src="/blog/wp-content/uploads/2024/05/tbmq1.webp" alt="" class="wp-image-4487" srcset="/blog/wp-content/uploads/2024/05/tbmq1.webp 2409w, /blog/wp-content/uploads/2024/05/tbmq1-300x107.webp 300w, /blog/wp-content/uploads/2024/05/tbmq1-1024x365.webp 1024w, /blog/wp-content/uploads/2024/05/tbmq1-768x274.webp 768w, /blog/wp-content/uploads/2024/05/tbmq1-1536x547.webp 1536w, /blog/wp-content/uploads/2024/05/tbmq1-2048x729.webp 2048w, /blog/wp-content/uploads/2024/05/tbmq1-512x182.webp 512w, /blog/wp-content/uploads/2024/05/tbmq1-920x328.webp 920w, /blog/wp-content/uploads/2024/05/tbmq1-1600x570.webp 1600w, /blog/wp-content/uploads/2024/05/tbmq1-1920x684.webp 1920w" sizes="(max-width: 2409px) 100vw, 2409px" /></figure>
</figure>



<p style="font-size:16px">This update contains the Flow Control feature, a crucial enhancement for managing the rate of message flow in MQTT communications. This feature is particularly important in scenarios where clients or brokers have limited processing capabilities or bandwidth.</p>



<p style="font-size:16px"><strong>How It Works:</strong> Flow Control in MQTT 5 is achieved through a key parameter: Receive Maximum. It dictates the maximum number of QoS 1 and QoS 2 messages that the client or broker is willing to process concurrently. Receive Maximum is exchanged within the CONNECT and CONNACK packets. Its default value is 65,535 based on the MQTT specification.</p>



<p style="font-size:16px"><strong>Why It&#8217;s Needed:</strong> Flow Control is an essential mechanism for several reasons:</p>



<ul>
<li style="font-size:16px"><strong>Preventing overload:</strong> Without Flow Control, there&#8217;s a risk of overwhelming a client or broker with more messages than it can process. This can lead to system lags, or in worst-case scenarios, cause crashes or unresponsiveness, particularly in smaller, less powerful devices.</li>



<li style="font-size:16px"><strong>Ensuring reliable communication:</strong> By controlling the flow of messages, MQTT ensures that data transmission remains stable and reliable.</li>



<li style="font-size:16px"><strong>Optimizing resource use:</strong> Flow Control allows for the efficient use of system resources. It ensures that devices are not bogged down by unnecessary processing tasks, which is particularly important in systems with limited computational power.</li>
</ul>



<p style="font-size:16px"><strong>Use Case</strong>: It can be any scenario (e.g. a smart home system or a traffic management system) where devices are constrained by processing power and cannot handle transmitting or receiving large amounts of data efficiently.</p>



<h4 class="wp-block-heading">MQTT 5: Request-Response pattern</h4>



<figure class="wp-block-gallery has-nested-images columns-default is-cropped wp-block-gallery-8 is-layout-flex wp-block-gallery-is-layout-flex">
<figure class="wp-block-image size-large"><img decoding="async" width="2409" height="1008" data-id="4489" src="/blog/wp-content/uploads/2024/05/tbmq-2.webp" alt="" class="wp-image-4489" srcset="/blog/wp-content/uploads/2024/05/tbmq-2.webp 2409w, /blog/wp-content/uploads/2024/05/tbmq-2-300x126.webp 300w, /blog/wp-content/uploads/2024/05/tbmq-2-1024x428.webp 1024w, /blog/wp-content/uploads/2024/05/tbmq-2-768x321.webp 768w, /blog/wp-content/uploads/2024/05/tbmq-2-1536x643.webp 1536w, /blog/wp-content/uploads/2024/05/tbmq-2-2048x857.webp 2048w, /blog/wp-content/uploads/2024/05/tbmq-2-512x214.webp 512w, /blog/wp-content/uploads/2024/05/tbmq-2-920x385.webp 920w, /blog/wp-content/uploads/2024/05/tbmq-2-1600x669.webp 1600w, /blog/wp-content/uploads/2024/05/tbmq-2-1920x803.webp 1920w" sizes="(max-width: 2409px) 100vw, 2409px" /></figure>
</figure>



<p style="font-size:16px">The MQTT 5 Request-Response pattern introduces a structured approach to communication, enabling devices to send requests and receive responses in a reliable and efficient manner.</p>



<p style="font-size:16px"><strong>How It Works:</strong> In the Request-Response pattern, a client sends a request message to a specific topic, typically indicating the action it wants to perform. This request includes essential parameters such as the Response Topic and Correlation Data. The recipient, which may be another client or application, processes the request and issues a corresponding response message directed to the specified Response Topic. This response provides the result or acknowledgment of the request. Utilizing Correlation Data, the original requester can precisely match the received response to its corresponding request, ensuring seamless bidirectional communication.</p>



<p style="font-size:16px"><strong>Why It&#8217;s Needed:</strong> The Request-Response pattern addresses the need for synchronous communication in IoT systems, where devices often require immediate feedback or confirmation for their actions. By establishing a structured request-response flow, MQTT 5 ensures a reliable and timely exchange of information between devices and applications.</p>



<p style="font-size:16px"><strong>Use Case:</strong> Consider a home automation scenario where a user wants to remotely control their smart lights. The user sends a request message to the TBMQ, specifying the action to turn on the lights. The broker transmits the request to the receiver which executes the action and sends the response message back to the user, confirming that the lights have been successfully turned on. This bidirectional communication allows for seamless interaction between the user and the smart home system, enhancing the overall user experience.</p>



<h4 class="wp-block-heading">Other notable enhancements</h4>



<p style="font-size:16px">In addition to the features highlighted earlier, this release includes several points that strengthen the system&#8217;s reliability and efficiency. </p>



<p style="font-size:16px">Significant enhancements have been made in backpressure management specifically for non-persistent subscribers. This improvement allows the system to handle data flow surges for these subscribers more efficiently by implementing rate limits. As a result, it ensures the system&#8217;s stability, maintaining consistent performance even under conditions of high demand.</p>



<p style="font-size:16px">The enhancement of the disconnect client command with Reason Codes marks a notable improvement, offering clearer insights into disconnection causes (e.g. &#8220;Session taken over&#8221;, &#8220;Administrative action&#8221;) and facilitating more targeted troubleshooting and analysis.</p>



<p style="font-size:16px">This version brings improvements in memory usage and overall performance. An important resolution of a direct memory leak issue leads to an optimized operational environment. This results in reduced latency and higher throughput, significantly boosting the system&#8217;s performance and robustness.</p><p>The post <a href="/blog/tbmq-1-3-0-release-websocket-client-advanced-mqtt-5-features-and-more/">TBMQ 1.3.0 release: WebSocket client, advanced MQTT 5 features, and more</a> first appeared on <a href="/blog/">Thingsboard's blog</a>.</p>]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
